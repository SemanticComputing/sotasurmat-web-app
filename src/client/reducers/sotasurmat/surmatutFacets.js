import {
  FETCH_FACET,
  FETCH_FACET_FAILED,
  UPDATE_FACET_VALUES,
  UPDATE_FACET_OPTION,
} from '../../actions';
import {
  fetchFacet,
  fetchFacetFailed,
  updateFacetValues,
  updateFacetOption,
} from '../helpers';

export const INITIAL_STATE = {
  updatedFacet: null,
  facetUpdateID: 0,
  updatedFilter: null,
  facets: {
    prefLabel: {
      id: 'prefLabel',
      label: 'Nimi',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: null,
      sortDirection: null,
      sortButton: false,
      spatialFilterButton: false,
      isFetching: false,
      searchField: false,
      containerClass: 'one',
      filterType: 'textFilter',
      textFilter: null,
      priority: 1
    },
    birthDateSpan: {
      id: 'birthDateSpan',
      label: 'Syntymäpäivä',
      //predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: null,
      sortDirection: null,
      sortButton: false,
      spatialFilterButton: false,
      isFetching: false,
      searchField: false,
      containerClass: 'two',
      filterType: 'dateFilter',
      min: '1800-01-01',
      max: '1922-12-31',
      timespanFilter: null,
      type: 'date'
    },
    deathDateSpan: {
      id: 'deathDateSpan',
      label: 'Kuolinpäivä',
      //predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: null,
      sortDirection: null,
      sortButton: false,
      spatialFilterButton: false,
      isFetching: false,
      searchField: false,
      containerClass: 'two',
      filterType: 'dateFilter',
      min: '1914-01-01',
      max: '1922-12-31',
      timespanFilter: null,
      type: 'date'
    },
    // birthTimespan: {
    //   id: 'birthTimespan',
    //   label: 'syntymävuosi',
    //   //predicate: defined in backend
    //   distinctValueCount: 0,
    //   values: [],
    //   flatValues: [],
    //   sortBy: null,
    //   sortDirection: null,
    //   sortButton: false,
    //   spatialFilterButton: false,
    //   isFetching: false,
    //   searchField: false,
    //   containerClass: 'three',
    //   filterType: 'timespanFilter',
    //   min: null,
    //   max: null,
    //   timespanFilter: null,
    //   type: 'timespan'
    // },
    // deathTimespan: {
    //   id: 'deathTimespan',
    //   label: 'kuolinvuosi',
    //   //predicate: defined in backend
    //   distinctValueCount: 0,
    //   values: [],
    //   flatValues: [],
    //   sortBy: null,
    //   sortDirection: null,
    //   sortButton: false,
    //   spatialFilterButton: false,
    //   isFetching: false,
    //   searchField: false,
    //   containerClass: 'three',
    //   filterType: 'timespanFilter',
    //   min: null,
    //   max: null,
    //   timespanFilter: null,
    //   type: 'timespan'
    // },
    age: {
      id: 'age',
      label: 'Ikä',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'instanceCount',
      sortDirection: 'desc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'three',
      type: 'integer',
      filterType: 'integerFilter',
      integerFilter: null,
    },
    numberOfChildren: {
      id: 'numberOfChildren',
      label: 'Lasten määrä',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'instanceCount',
      sortDirection: 'desc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'three',
      type: 'integer',
      filterType: 'integerFilter',
      integerFilter: null,
    },
    occupation: {
      id: 'occupation',
      label: 'Ammatti',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    ammoOccupation: {
      id: 'ammoOccupation',
      label: 'AMMO Ammatti',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    hisclass7: {
      id: 'hisclass7',
      label: 'Hisclass7',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    coo1980: {
      id: 'coo1980',
      label: 'ammatti - coo1980',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
      type: 'hierarchical',
    },
    hisco: {
      id: 'hisco',
      label: 'ammatti - hisco',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
      type: 'list',
    },
    // hisco: {
    //   id: 'hisco',
    //   label: 'ammatti - hisco',
    //   // predicate: defined in backend
    //   distinctValueCount: 0,
    //   values: [],
    //   flatValues: [],
    //   sortBy: 'prefLabel',
    //   sortDirection: 'asc',
    //   sortButton: false,
    //   spatialFilterButton: false,
    //   isFetching: false,
    //   searchField: true,
    //   containerClass: 'ten',
    //   filterType: 'uriFilter',
    //   uriFilter: null,
    //   type: 'hierarchical',
    // },
    causeOfDeath: {
      id: 'causeOfDeath',
      label: 'Kuolinsyy',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    registeredCountry: {
      id: 'registeredCountry',
      label: 'Kirjoillaolomaa',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    registeredProvince: {
      id: 'registeredProvince',
      label: 'Kirjoillaololääni',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    registeredMunicipality: {
      id: 'registeredMunicipality',
      label: 'Kirjoillaolokunta',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    deathCountry: {
      id: 'deathCountry',
      label: 'Kuolinmaa',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    deathProvince: {
      id: 'deathProvince',
      label: 'Kuolinlääni',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    deathMunicipality: {
      id: 'deathMunicipality',
      label: 'Kuolinkunta',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: true,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    // registeredPlace: {
    //   id: 'registeredPlace',
    //   label: 'Kirjoillaolopaikka - hierarkinen testi',
    //   // predicate: defined in backend
    //   distinctValueCount: 0,
    //   values: [],
    //   flatValues: [],
    //   sortBy: 'prefLabel',
    //   sortDirection: 'asc',
    //   sortButton: false,
    //   spatialFilterButton: false,
    //   isFetching: false,
    //   searchField: true,
    //   containerClass: 'ten',
    //   filterType: 'uriFilter',
    //   uriFilter: null,
    //   type: 'hierarchical',
    // },
    party: {
      id: 'party',
      label: 'Osapuoli',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'instanceCount',
      sortDirection: 'desc',
      sortButton: true,
      spatialFilterButton: false,
      isFetching: false,
      searchField: false,
      containerClass: 'three',
      filterType: 'uriFilter',
      uriFilter: null,
    },
    gender: {
      id: 'gender',
      label: 'Sukupuoli',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: false,
      spatialFilterButton: false,
      isFetching: false,
      searchField: false,
      containerClass: 'two',
      filterType: 'uriFilter',
      uriFilter: null,
      priority: 8
    },
    militaryOrganization: {
      id: 'militaryOrganization',
      label: 'Sotilasjärjestö',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: false,
      spatialFilterButton: false,
      isFetching: false,
      searchField: false,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
      priority: 8
    },
    maritalStatus: {
      id: 'maritalStatus',
      label: 'Siviilisääty',
      // predicate: defined in backend
      distinctValueCount: 0,
      values: [],
      flatValues: [],
      sortBy: 'prefLabel',
      sortDirection: 'asc',
      sortButton: false,
      spatialFilterButton: false,
      isFetching: false,
      searchField: false,
      containerClass: 'ten',
      filterType: 'uriFilter',
      uriFilter: null,
      priority: 8
    },
    // familyWelfare: {
    //   id: 'familyWelfare',
    //   label: 'Perheen toimeentulo',
    //   // predicate: defined in backend
    //   distinctValueCount: 0,
    //   values: [],
    //   flatValues: [],
    //   sortBy: 'prefLabel',
    //   sortDirection: 'asc',
    //   sortButton: false,
    //   spatialFilterButton: false,
    //   isFetching: false,
    //   searchField: false,
    //   containerClass: 'ten',
    //   filterType: 'uriFilter',
    //   uriFilter: null,
    //   priority: 8
    // },
  }
};

const deathsFacets = (state = INITIAL_STATE, action) => {
  if (action.facetClass === 'surmatut') {
    switch (action.type) {
      case FETCH_FACET:
        return fetchFacet(state, action);
      case FETCH_FACET_FAILED:
        return fetchFacetFailed(state, action);
      case UPDATE_FACET_VALUES:
        return updateFacetValues(state, action);
      case UPDATE_FACET_OPTION:
        return updateFacetOption(state, action);
      default:
        return state;
    }
  } else return state;
};

export default deathsFacets;
